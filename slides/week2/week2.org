#+TITLE: Week 2
#+AUTHOR: Kristaps Berzinch, Raymond Ortiz
#+EMAIL: kristaps@robojackets.org

* What are we doing today?
- Introduction to C++
 - What it is
 - Functions
 - Includes and headers
 - Working with strings
- How to find and read documentation
- Sending and recieving changes from remote Git repositories

* What is C++?
- A general-purpose programming language
- Designed with performance, efficiency, and flexibility in mind
- Great for robots!

* Functions
#+BEGIN_NOTES
After introducing the concept, write a simple example. Don't go into prototypes yet, we'll cover them in a bit.

TODO I think we should design a specific example that is easy to code on the fly but isn't completely trivial (e.g. writing an adder function seems dumb)
#+END_NOTES
- A function is a chunk of code with defined inputs and outputs
- These can be chained together in various ways to do useful things
- In general, you want each function to do one thing

* Includes
#+BEGIN_NOTES
After introducing the concept, demo some basic examples of including a file within another file. Still no prototypes.
Include a function declaration in more than one file to cause a compilation error to lead into header files
#+END_NOTES
- Used for including other files inside of a particular file
- This enables more modular application design

* Header files
#+BEGIN_NOTES
Now you can talk about prototypes!
#+END_NOTES
- Only contain _declarations_, also known as prototypes, not definitions
- This enables a lot of different files to "know" about a function but only have one definition for it

* Working with strings
#+BEGIN_NOTES
Write and walk through some example code.
#+END_NOTES
- A C-style string is stored as an array of characters ending with a NULL (0x0)
- The C++ standard library contains several functions for working with strings in =<string>=
| Name | Description |
|-------+------|
| =length= | Returns the length of a string |
| =substr= | Returns a portion (substring) of the string |
| =find= | Returns the position of a substring, if present |
| =empty= | Returns true if length is zero, otherwise false |
- Use the addition oprator (+) to concatenate strings
- Use =to_string= to convert other types to strings
- Use =sto___= functions to parse strings to other types
